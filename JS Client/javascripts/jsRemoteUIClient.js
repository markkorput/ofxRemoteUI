// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.jsRemoteUIClient = (function(_super) {
    __extends(jsRemoteUIClient, _super);

    function jsRemoteUIClient() {
      this.loadSession = __bind(this.loadSession, this);
      _ref = jsRemoteUIClient.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    jsRemoteUIClient.prototype.initialize = function() {
      var _this = this;
      this.socket = io.connect('http://127.0.0.1', {
        port: 8081,
        rememberTransport: false
      });
      this.broadcastReceiver = new jsRemoteUIBroadcastReceiver({
        socket: this.socket,
        port: 25748
      });
      this.sessions = new SessionsCollection();
      this.broadcastReceiver.remotes.on("add", function(remote) {
        if (_this.broadcastReceiver.remotes.length === 1) {
          return _this.loadSession(remote);
        }
      });
      this.headerView = new HeaderView({
        model: this.broadcastReceiver
      });
      this.headerView.on('remoteChanged', this.loadSession);
      this.sessionsListView = new SessionsListView({
        collection: this.sessions
      });
      jQuery('body').append(this.headerView.el);
      jQuery('body').append('<hr/>');
      return jQuery('body').append(this.sessionsListView.el);
    };

    jsRemoteUIClient.prototype.update = function() {};

    jsRemoteUIClient.prototype.draw = function() {};

    jsRemoteUIClient.prototype.loadSession = function(remote) {
      return this.sessions.add({
        remote: remote,
        socket: this.socket
      });
    };

    return jsRemoteUIClient;

  })(Backbone.Model);

}).call(this);
