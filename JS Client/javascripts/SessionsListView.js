// Generated by CoffeeScript 1.6.3
(function() {
  var _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.SessionsListView = (function(_super) {
    __extends(SessionsListView, _super);

    function SessionsListView() {
      _ref = SessionsListView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    SessionsListView.prototype.tagName = "main";

    SessionsListView.prototype.initialize = function() {
      var _this = this;
      this.sessionViews = [];
      return this.collection.on('add', function(session) {
        var sessionView;
        sessionView = new SessionView({
          model: session
        });
        _this.$el.append(sessionView.el);
        return _this.sessionViews.push(sessionView);
      });
    };

    return SessionsListView;

  })(Backbone.View);

  this.SessionView = (function(_super) {
    __extends(SessionView, _super);

    function SessionView() {
      _ref1 = SessionView.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    SessionView.prototype.tagName = "section";

    SessionView.prototype.initialize = function() {
      var remote;
      remote = this.model.get('remote');
      return this.$el.append('<h1>' + remote.get('binaryName') + '@' + remote.get('computerName') + ' (' + remote.get('ip') + ')</h1>');
    };

    return SessionView;

  })(Backbone.View);

}).call(this);
